{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBADrB,0BAF+B,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAiB9C,OACI,mCACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OAE3CN,EAAc,KAKV,SAEI,uBACIO,KAAQ,OACRC,MAAUT,EACVU,SAnBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEkCC,UAAWH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEnC,OACI,sBAAKc,UAAY,wCAAjB,UAEQ,qBAAKC,IAAQf,EAAMgB,IAAQN,IAC3B,4BAAKA,QCJRO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAwBxC,OAjBAC,qBAAU,WAINxB,EAASC,GACJwB,MAAM,SAACC,GACAH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAK1B,CAAEpB,IAIEqB,EDtBwBK,CAAc1B,GAAjCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAKpB,OACI,qCACI,6BAAKpB,IACHoB,GAAW,gDACb,qBAAKJ,UAAY,YAAjB,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIC,aEf/BgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAI9B,OACI,qCACI,4CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCVpC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.448f77e6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const saludo = 'AÃ±ade una categoria';\r\n    const [inputValue, setInputValue] = useState(saludo);\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n        }\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit = { handleSubmit }>\r\n\r\n                <input \r\n                    type =  \"text\"\r\n                    value = { inputValue }\r\n                    onChange = { handleInputChange }\r\n                />\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async( category ) =>{\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=20z27Z9q5lmCPC000vihkwmcUQLPcqQp`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map (img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {  title, url } ) => {\r\n\r\n    return (\r\n        <div className = 'card animate__animated animate__pulse'>\r\n            \r\n                <img src = { url } alt = { title } />\r\n                <p>{ title }</p>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n    \r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && <p>Loading data...</p> }\r\n            <div className = \"card-grid\">\r\n                {\r\n                        images.map( img =>(\r\n                            <GifGridItem \r\n                                key = { img.id }\r\n                                {... img} />\r\n                        ))\r\n                }\r\n            \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() =>{\r\n\r\n        \r\n\r\n        getGifs( category )\r\n            .then( (imgs) =>{\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    });\r\n            \r\n            });\r\n\r\n    }, [ category ]);\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Piece']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpert</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category }/>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}